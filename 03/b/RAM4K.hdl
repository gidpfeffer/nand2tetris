// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=true, sel=address[9..11], a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh);
    
    And(a=load, b=aa, out=aload);
    RAM512(in=in, load=aload, address=address[0..8], out=oa);
    And(a=load, b=bb, out=bload);
    RAM512(in=in, load=bload, address=address[0..8], out=ob);
    And(a=load, b=cc, out=cload);
    RAM512(in=in, load=cload, address=address[0..8], out=oc);
    And(a=load, b=dd, out=dload);
    RAM512(in=in, load=dload, address=address[0..8], out=od);
    And(a=load, b=ee, out=eload);
    RAM512(in=in, load=eload, address=address[0..8], out=oe);
    And(a=load, b=ff, out=fload);
    RAM512(in=in, load=fload, address=address[0..8], out=of);
    And(a=load, b=gg, out=gload);
    RAM512(in=in, load=gload, address=address[0..8], out=og);
    And(a=load, b=hh, out=hload);
    RAM512(in=in, load=hload, address=address[0..8], out=oh);

    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[9..11], out=out);
}