// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux4Way(in=true, sel=address[12..13], a=aa, b=bb, c=cc, d=dd);
    
    And(a=load, b=aa, out=aload);
    RAM4K(in=in, load=aload, address=address[0..11], out=oa);
    And(a=load, b=bb, out=bload);
    RAM4K(in=in, load=bload, address=address[0..11], out=ob);
    And(a=load, b=cc, out=cload);
    RAM4K(in=in, load=cload, address=address[0..11], out=oc);
    And(a=load, b=dd, out=dload);
    RAM4K(in=in, load=dload, address=address[0..11], out=od);

    Mux4Way16(a=oa, b=ob, c=oc, d=od, sel=address[12..13], out=out);
}